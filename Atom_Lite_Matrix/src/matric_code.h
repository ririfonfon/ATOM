#include <Arduino.h>

#include "M5Atom.h"

void setup()
{
  M5.begin(true, false, true);
  delay(50);
  M5.dis.drawpix(0, 0xf00000);
}

uint8_t FSM = 0;

void loop()
{
  if (M5.Btn.wasPressed())
  {

    switch (FSM)
    {
    case 0:
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 0, 0xf00000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 1, 0x00f000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 2, 0x0000f0);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 3, 0x707070);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 4, 0x000000);
      break;
    case 1:
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 1, 0xf00000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 2, 0x00f000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 3, 0x0000f0);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 4, 0x707070);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 0, 0x000000);
      break;
    case 2:
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 2, 0xf00000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 3, 0x00f000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 4, 0x0000f0);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 0, 0x707070);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 1, 0x000000);
      break;
    case 3:
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 3, 0xf00000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 4, 0x00f000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 0, 0x0000f0);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 1, 0x707070);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 2, 0x000000);
      break;
    case 4:
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 4, 0xf00000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 0, 0x00f000);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 1, 0x0000f0);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 2, 0x707070);
      for (int i = 0; i < 5; i++)
        M5.dis.drawpix(i, 3, 0x000000);
      break;
    default:
      break;
    }
    FSM++;
    if (FSM >= 5)
    {
      FSM = 0;
    }
  }

  delay(50);
  M5.update();
}

// #include "image.h"

/* this Example only for M5Atom Matrix */

// extern const unsigned char AtomImageData[375 + 2];

// bool IMU6886Flag = false;

// void setup()
// {
//     M5.begin(true, false, true);
//     delay(50);
//  M5.dis.animation((uint8_t *)AtomImageData, 200, LED_Display::kMoveLeft, 18);
// }

// void loop()
// {
//     delay(500);
//     M5.update();
// }

// const unsigned char  AtomImageData[375+2] =
// {
//     25,// width
//     5,// height
//     0x00 , 0x00 , 0x00 , 0xFF , 0x00 , 0x39 , 0xFF , 0x00 , 0x8A , 0xFF , 0x00 , 0xD9 , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0x80 , 0x00 , 0xFF , 0x3C , 0x00 , 0xFF , 0x08 , 0x00 , 0xFF , 0x00 , 0x24 , 0xFF , 0x00 , 0x6C ,
//     0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0xE0 , 0x00 , 0xFF , 0xA3 , 0x00 , 0xFF , 0x5C ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x89 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF ,
//     0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xF7 , 0x00 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0x00 , 0x08 , 0x00 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0xF5 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0x1F , 0x00 , 0x00 ,
//     0x00 , 0x40 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0xCF , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0xCC , 0x00 ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0xF6 , 0x00 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x08 , 0x00 ,
//     0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xF5 , 0xFF , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0x1F , 0x00 , 0x00 , 0x00 , 0x40 , 0xFF , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0xCF , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0xCC , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0xFF , 0x00 , 0x00 , 0xFF , 0x00 , 0x38 , 0xFF , 0x00 , 0x8A , 0xFF , 0x00 , 0xD8 , 0xF7 , 0x00 , 0xFF ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x08 , 0x00 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xF6 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0xFF , 0x1F , 0x00 , 0x00 , 0x00 , 0x40 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0xCF , 0xFF , 0x00 ,
//     0x00 , 0x00 , 0x00 , 0xFF , 0xCB , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xF7 , 0x00 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0x08 , 0x00 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0xE1 , 0x00 , 0xFF , 0xA3 , 0x00 , 0xFF , 0x5C , 0x00 , 0x00 , 0x00 , 0x00 ,
//     0x00 , 0x00 , 0x40 , 0xFF , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0xFF , 0xCC ,
//     0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00 , 0x00
// };